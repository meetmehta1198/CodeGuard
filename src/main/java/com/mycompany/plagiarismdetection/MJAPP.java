/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.plagiarismdetection;


import com.mycompany.plagiarismdetection.FileReading;
import static com.mycompany.plagiarismdetection.FileReading.compareFiles;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.apache.commons.io.FilenameUtils;


/**
 *
 * @author Dell
 */
public class MJAPP extends javax.swing.JFrame {
 JFileChooser chooser1 ;
    /**
     * Creates new form MJAPP
     */
    double ans;
    public MJAPP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Option = new javax.swing.JPopupMenu();
        C = new javax.swing.JMenuItem();
        jToggleButton1 = new javax.swing.JToggleButton();
        BasePanel = new javax.swing.JPanel();
        HeadPanel = new javax.swing.JPanel();
        TITLELabel = new javax.swing.JLabel();
        StatusPanel = new javax.swing.JPanel();
        SidePanel = new javax.swing.JPanel();
        HomeLabel = new javax.swing.JLabel();
        CheckLabel = new javax.swing.JLabel();
        CompareLabel = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        HomeCard = new javax.swing.JPanel();
        jSlider2 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        ThreshouldLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        CompareCard = new javax.swing.JPanel();
        CompareTabbedPane = new javax.swing.JTabbedPane();
        FilePanel = new javax.swing.JPanel();
        InputButton = new javax.swing.JButton();
        InputButton1 = new javax.swing.JButton();
        InputLabel = new javax.swing.JLabel();
        ComFileLabel = new javax.swing.JLabel();
        DetectButton = new javax.swing.JButton();
        ErrorLabel = new javax.swing.JLabel();
        DirectoryPanel = new javax.swing.JPanel();
        DirectoryLabel = new javax.swing.JLabel();
        DirectoryButton = new javax.swing.JButton();
        DetectDirButton = new javax.swing.JButton();
        ERRORLabel = new javax.swing.JLabel();
        CheckCard = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        FileTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        filebutton = new javax.swing.JButton();
        NameLabel = new javax.swing.JLabel();
        DirectoryButton1 = new javax.swing.JButton();
        CheckToggleButton = new javax.swing.JToggleButton();
        checkLabel = new javax.swing.JLabel();
        ResultCard = new javax.swing.JPanel();
        InputLabel1 = new javax.swing.JLabel();
        ComFileLabel1 = new javax.swing.JLabel();
        ResultLabel = new javax.swing.JLabel();
        ResultProgressBar = new javax.swing.JProgressBar();
        HomeButton = new javax.swing.JButton();
        ResultDirCard = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CompareTable = new javax.swing.JTable();
        HomeButton1 = new javax.swing.JButton();
        pdfpathButton = new javax.swing.JButton();
        pdfpathLabel = new javax.swing.JLabel();
        pdfToggleButton = new javax.swing.JToggleButton();
        pdfTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CsvFileLabel = new javax.swing.JLabel();

        C.setText("jMenuItem1");
        Option.add(C);

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 699, 411));
        setSize(new java.awt.Dimension(700, 520));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BasePanel.setBackground(new java.awt.Color(51, 255, 51));
        BasePanel.setPreferredSize(new java.awt.Dimension(700, 650));
        BasePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HeadPanel.setBackground(new java.awt.Color(0, 204, 204));
        HeadPanel.setPreferredSize(new java.awt.Dimension(704, 70));
        HeadPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TITLELabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TITLELabel.setForeground(new java.awt.Color(102, 0, 102));
        TITLELabel.setText("MJAPP Plagiarism Detection");
        HeadPanel.add(TITLELabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 14, 640, 40));

        BasePanel.add(HeadPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 70));

        StatusPanel.setBackground(new java.awt.Color(153, 153, 153));
        StatusPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        BasePanel.add(StatusPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 700, 30));

        SidePanel.setBackground(new java.awt.Color(102, 153, 255));
        SidePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SidePanel.setPreferredSize(new java.awt.Dimension(150, 450));
        SidePanel.setLayout(new java.awt.GridLayout(3, 1, 5, 10));

        HomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HomeLabel.setText("Home");
        HomeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeLabelMouseClicked(evt);
            }
        });
        SidePanel.add(HomeLabel);

        CheckLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CheckLabel.setText("Check");
        CheckLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CheckLabelMouseClicked(evt);
            }
        });
        SidePanel.add(CheckLabel);

        CompareLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CompareLabel.setText("Compare");
        CompareLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CompareLabelMouseClicked(evt);
            }
        });
        SidePanel.add(CompareLabel);

        BasePanel.add(SidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 150, 310));

        MainPanel.setLayout(new java.awt.CardLayout());

        jSlider2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider2MouseDragged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SET THRESHOULD");

        ThreshouldLabel.setText("50");

        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HomeCardLayout = new javax.swing.GroupLayout(HomeCard);
        HomeCard.setLayout(HomeCardLayout);
        HomeCardLayout.setHorizontalGroup(
            HomeCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeCardLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(HomeCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ThreshouldLabel)
                    .addGroup(HomeCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap(150, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeCardLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(67, 67, 67))
        );
        HomeCardLayout.setVerticalGroup(
            HomeCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeCardLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(ThreshouldLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(38, 38, 38))
        );

        MainPanel.add(HomeCard, "card2");

        CompareCard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        InputButton.setText("Browse File");
        InputButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InputButtonMouseClicked(evt);
            }
        });
        InputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputButtonActionPerformed(evt);
            }
        });

        InputButton1.setText("Browse File");
        InputButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InputButton1MouseClicked(evt);
            }
        });
        InputButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputButton1ActionPerformed(evt);
            }
        });

        InputLabel.setText("Input File");

        ComFileLabel.setText("CompareFile");

        DetectButton.setText("Detect");
        DetectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FilePanelLayout = new javax.swing.GroupLayout(FilePanel);
        FilePanel.setLayout(FilePanelLayout);
        FilePanelLayout.setHorizontalGroup(
            FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilePanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(ComFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                .addContainerGap(219, Short.MAX_VALUE)
                .addComponent(ErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
            .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                    .addContainerGap(29, Short.MAX_VALUE)
                    .addComponent(InputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(335, Short.MAX_VALUE)))
            .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                    .addContainerGap(27, Short.MAX_VALUE)
                    .addComponent(InputButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(339, Short.MAX_VALUE)))
            .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                    .addContainerGap(32, Short.MAX_VALUE)
                    .addComponent(InputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(332, Short.MAX_VALUE)))
            .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                    .addContainerGap(336, Short.MAX_VALUE)
                    .addComponent(DetectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        FilePanelLayout.setVerticalGroup(
            FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addComponent(ComFileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(ErrorLabel)
                .addGap(66, 66, 66))
            .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                    .addContainerGap(50, Short.MAX_VALUE)
                    .addComponent(InputButton)
                    .addContainerGap(179, Short.MAX_VALUE)))
            .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                    .addContainerGap(134, Short.MAX_VALUE)
                    .addComponent(InputButton1)
                    .addContainerGap(95, Short.MAX_VALUE)))
            .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                    .addContainerGap(21, Short.MAX_VALUE)
                    .addComponent(InputLabel)
                    .addContainerGap(217, Short.MAX_VALUE)))
            .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilePanelLayout.createSequentialGroup()
                    .addContainerGap(199, Short.MAX_VALUE)
                    .addComponent(DetectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(20, Short.MAX_VALUE)))
        );

        CompareTabbedPane.addTab("FILE", FilePanel);

        DirectoryLabel.setText("ChooseDirectory");

        DirectoryButton.setText("Browse Directory");
        DirectoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DirectoryButtonMouseClicked(evt);
            }
        });
        DirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectoryButtonActionPerformed(evt);
            }
        });

        DetectDirButton.setText("Detect");
        DetectDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetectDirButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DirectoryPanelLayout = new javax.swing.GroupLayout(DirectoryPanel);
        DirectoryPanel.setLayout(DirectoryPanelLayout);
        DirectoryPanelLayout.setHorizontalGroup(
            DirectoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DirectoryPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(DirectoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DirectoryPanelLayout.createSequentialGroup()
                        .addComponent(ERRORLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DetectDirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(DirectoryPanelLayout.createSequentialGroup()
                        .addGroup(DirectoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DirectoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DirectoryButton))
                        .addContainerGap(151, Short.MAX_VALUE))))
        );
        DirectoryPanelLayout.setVerticalGroup(
            DirectoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DirectoryPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(DirectoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DirectoryButton)
                .addGap(83, 83, 83)
                .addGroup(DirectoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DetectDirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ERRORLabel))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        CompareTabbedPane.addTab("DIRECTORY", DirectoryPanel);

        CompareCard.add(CompareTabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 280));

        MainPanel.add(CompareCard, "card2");

        CheckCard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FileTextArea.setColumns(20);
        FileTextArea.setRows(5);
        jScrollPane2.setViewportView(FileTextArea);

        CheckCard.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 430, 180));

        jLabel2.setText("COMPARE WITH ");
        CheckCard.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, 20));

        filebutton.setText("FILE");
        filebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filebuttonMouseClicked(evt);
            }
        });
        filebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filebuttonActionPerformed(evt);
            }
        });
        CheckCard.add(filebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));
        CheckCard.add(NameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 110, 20));

        DirectoryButton1.setText("Browse Directory");
        DirectoryButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DirectoryButton1MouseClicked(evt);
            }
        });
        DirectoryButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectoryButton1ActionPerformed(evt);
            }
        });
        CheckCard.add(DirectoryButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, -1, -1));

        CheckToggleButton.setText("CHECK");
        CheckToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckToggleButtonActionPerformed(evt);
            }
        });
        CheckCard.add(CheckToggleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 240, -1, -1));
        CheckCard.add(checkLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, 100, 20));

        MainPanel.add(CheckCard, "card2");

        ResultCard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        ResultCard.add(InputLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, -1, -1));
        ResultCard.add(ComFileLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, -1, -1));

        ResultLabel.setText("No Result");
        ResultCard.add(ResultLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, -1, -1));
        ResultCard.add(ResultProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 80, 320, 40));

        HomeButton.setText("Home");
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });
        ResultCard.add(HomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, -1, -1));

        MainPanel.add(ResultCard, "card2");

        ResultDirCard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CompareTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Input File", "Output File", " % Plagiarism"
            }
        ));
        CompareTable.setRequestFocusEnabled(false);
        CompareTable.setRowSelectionAllowed(false);
        CompareTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(CompareTable);
        CompareTable.getAccessibleContext().setAccessibleName("");
        CompareTable.getAccessibleContext().setAccessibleDescription("");

        ResultDirCard.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 390, 200));

        HomeButton1.setText("Home");
        HomeButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButton1ActionPerformed(evt);
            }
        });
        ResultDirCard.add(HomeButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, -1, -1));

        pdfpathButton.setText("BROWSE PATH");
        pdfpathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfpathButtonActionPerformed(evt);
            }
        });
        ResultDirCard.add(pdfpathButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 120, -1));
        ResultDirCard.add(pdfpathLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, -1, 30));

        pdfToggleButton.setText("SAVE RESULT");
        pdfToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfToggleButtonActionPerformed(evt);
            }
        });
        ResultDirCard.add(pdfToggleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));
        ResultDirCard.add(pdfTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 150, -1));
        ResultDirCard.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 200, 20));

        CsvFileLabel.setText(" FILE NAME:-");
        ResultDirCard.add(CsvFileLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 214, -1, 20));

        MainPanel.add(ResultDirCard, "card2");

        BasePanel.add(MainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 550, 310));

        getContentPane().add(BasePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1, 700, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeLabelMouseClicked
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();
        
        MainPanel.add(HomeCard);
        MainPanel.repaint();
        MainPanel.revalidate();
    }//GEN-LAST:event_HomeLabelMouseClicked

    private void CheckLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckLabelMouseClicked
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();
        
        MainPanel.add(CheckCard);
        MainPanel.repaint();
        MainPanel.revalidate();
    }//GEN-LAST:event_CheckLabelMouseClicked

    private void CompareLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CompareLabelMouseClicked
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();
        
        MainPanel.add(CompareCard);
        MainPanel.repaint();
        MainPanel.revalidate();
    }//GEN-LAST:event_CompareLabelMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();
        
        MainPanel.add(CompareCard);
        MainPanel.repaint();
        MainPanel.revalidate();
        
    }//GEN-LAST:event_jButton1ActionPerformed
     public void toExcel(JTable table, File file){
		try{
			TableModel model = table.getModel();
			FileWriter excel = new FileWriter(file);

			for(int i = 0; i < model.getColumnCount(); i++){
				excel.write(model.getColumnName(i) + "\t");
			}

			excel.write("\n");

			for(int i=0; i< model.getRowCount(); i++) {
				for(int j=0; j < model.getColumnCount(); j++) {
					excel.write(model.getValueAt(i,j).toString()+"\t");
				}
				excel.write("\n");
			}

			excel.close();
		}catch(IOException e){ System.out.println(e); }
	}
    private void jSlider2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider2MouseDragged
        ThreshouldLabel.setText(String.valueOf(jSlider2.getValue()));
    }//GEN-LAST:event_jSlider2MouseDragged

    private void DirectoryButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DirectoryButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DirectoryButtonMouseClicked

    private void DirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectoryButtonActionPerformed
      JFileChooser chooser = new JFileChooser();
      chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      FileNameExtensionFilter filter = new FileNameExtensionFilter("C source file", ".c", ".lex");
      chooser.setFileFilter(filter);
      chooser.showOpenDialog(null);
      File di = chooser.getSelectedFile();
      String filename = di.getAbsolutePath();
      DirectoryLabel.setText(filename);
    }//GEN-LAST:event_DirectoryButtonActionPerformed

    private void DetectDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetectDirButtonActionPerformed
             
        String s2 = DirectoryLabel.getText();
         demo d=new demo();
        File folder=new File(s2);
        File[] listOffiles = folder.listFiles();
      
     //   sss = DirectoryLabel.getText()
        if(s2.equals("ChooseDirectory"))
        {
            ERRORLabel.setText("select directory");
        }
        else
        {
            ERRORLabel.setText("");
              MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();
        
        MainPanel.add(ResultDirCard);
        MainPanel.repaint();
        MainPanel.revalidate();
        
        CompareTable.removeAll();
        CompareTable.repaint();
        CompareTable.revalidate();
        DefaultTableModel dtm = (DefaultTableModel)CompareTable.getModel();
        dtm.setRowCount(0);
        try {    
           int i=0;
           int k=0;
        for( File file : listOffiles)
        {
            String extension1=FilenameUtils.getExtension(file.toString());
            if(file.isFile() && extension1.equals("c") )
            {
                int j=0;
               // System.out.println(file.getName());
                String i1 = demo.readFileInList(s2+'/'+file.getName());   
                i1=i1.replaceAll("(?:/\\*(?:[^*]|(?:\\*+[^*/]))*\\*+/)|(?://.*)","");
                  i1=i1.replaceAll("#include<.*>","");
                i1=i1.replaceAll("#define.*","");
                for( File f1 : listOffiles)
                {
                    String extension2=FilenameUtils.getExtension(f1.toString());
                    
                    if(f1.isFile() && extension2.equals("c"))
                    {
                        if(j<k)
                        {
                            j++;
                            continue;
                        }
                        if(!(f1.getName().equals(file.getName())))
                        {
                            String i2=demo.readFileInList(s2+'/'+f1.getName());
                            i2=i2.replaceAll("(?:/\\*(?:[^*]|(?:\\*+[^*/]))*\\*+/)|(?://.*)","");
                              i2=i2.replaceAll("#include<.*>","");
                                i2=i2.replaceAll("#define.*","");
                            double percent=compareFiles(i1,i2);
                         
                            if(percent >=  Double.parseDouble(ThreshouldLabel.getText()))
                            {
                                dtm.addRow(new Object[]{null,null,null});
                                CompareTable.setValueAt(file.getName(),i,0);
                                CompareTable.setValueAt(f1.getName(),i,1);
                                CompareTable.setValueAt(String.format("%.2f",percent),i,2);
                      
                                i++;
                            }
                         //System.out.println("EEEEE##########"+percent);
                        }
                    }
                }
            }
            k++;
       }   
        } catch (IOException ex) {
            Logger.getLogger(MJAPP.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
    }//GEN-LAST:event_DetectDirButtonActionPerformed

    private void DetectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetectButtonActionPerformed
        

        String s2 = ComFileLabel.getText();
        String s1 = InputLabel.getText();
        FileReading f=new FileReading();
       
        if(errchk==2)
        {
             ErrorLabel.setText("");
        try {
            ans = FileReading.compareTwoFiles(s1,s2);
            ResultLabel.setText(String.format("%.2f",ans));
            ResultProgressBar.setValue((int)ans);
            if(ans >  Double.parseDouble(ThreshouldLabel.getText()))
                ResultProgressBar.setForeground(Color.red);
            else{
                     
                ResultProgressBar.setIgnoreRepaint(false);
                ResultProgressBar.setStringPainted(true);
                ResultProgressBar.setForeground(Color.green);
               // ResultProgressBar.setb
                
            }
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();

        MainPanel.add(ResultCard);
        MainPanel.repaint();
        MainPanel.revalidate();
        } catch (IOException ex) {
            Logger.getLogger(MJAPP.class.getName()).log(Level.SEVERE, null, ex);
        }
        ComFileLabel.setText( "CompareFile");
        InputLabel.setText("InputFile");
        ErrorLabel.setText("");
        errchk=0;
        }
        else
        {
            ErrorLabel.setText("Please select the Apropriate FIles. ");  
        }
    }//GEN-LAST:event_DetectButtonActionPerformed

    private void InputButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser1.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("C source file", ".c", ".lex");
        chooser1.setFileFilter(filter);
        chooser.showOpenDialog(null);
        File f2 = chooser.getSelectedFile();
        String extension1=FilenameUtils.getExtension(f2.toString());
        if(extension1.equals("c"))
        {   
            errchk++;
        String filename = f2.getAbsolutePath();
        ComFileLabel.setText(filename);
        }
        else
            ErrorLabel.setText("FIle must be C");
    }//GEN-LAST:event_InputButton1ActionPerformed

    private void InputButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InputButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_InputButton1MouseClicked
public static int errchk;
    private void InputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputButtonActionPerformed
        chooser1 = new JFileChooser();
        chooser1.setFileSelectionMode(JFileChooser.FILES_ONLY);
      //  FileNameExtensionFilter filter = new FileNameExtensionFilter("C source file", ".c", ".lex");
       // chooser1.setFileFilter(filter);
        chooser1.showOpenDialog(null);
        File f1 = chooser1.getSelectedFile();
        String extension1=FilenameUtils.getExtension(f1.toString());
        if(extension1.equals("c"))
        {
            errchk++;
            String filename = f1.getAbsolutePath();
            InputLabel.setText(filename);
        }
        else
            ErrorLabel.setText("FIle must be C"); 
    }//GEN-LAST:event_InputButtonActionPerformed

    private void InputButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InputButtonMouseClicked
        // MainPanel.add(ChooseFileDialog);
        //      ChooseFileDialog.setVisible(true);
    }//GEN-LAST:event_InputButtonMouseClicked

    private void filebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filebuttonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_filebuttonMouseClicked

    private void filebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filebuttonActionPerformed
        chooser1 = new JFileChooser();
        chooser1.showOpenDialog(null);
        File f1 = chooser1.getSelectedFile();
        String filename1 = f1.getAbsolutePath();
        NameLabel.setText(filename1);
        CheckToggleButton.setText("Check File");
    }//GEN-LAST:event_filebuttonActionPerformed

    private void DirectoryButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DirectoryButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DirectoryButton1MouseClicked

    private void DirectoryButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectoryButton1ActionPerformed
      JFileChooser chooser = new JFileChooser();
      chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      FileNameExtensionFilter filter = new FileNameExtensionFilter("C source file", ".c", ".lex");
      chooser.setFileFilter(filter);
      chooser.showOpenDialog(null);
      File di = chooser.getSelectedFile();
      String filename = di.getAbsolutePath();
      NameLabel.setText(filename);
      CheckToggleButton.setText("Check DIR");
    }//GEN-LAST:event_DirectoryButton1ActionPerformed
   private boolean matches(String name)
   {
       return Pattern.matches(".*.[c]", name);
   }
    private void compareDirectoryAndFile(List<String> temp,String dname) throws IOException
   {
        String s1=" ";
         for(String t : temp)
         {
             s1=s1.concat(t);
         }
         s1=s1.replaceAll("(?:/\\*(?:[^*]|(?:\\*+[^*/]))*\\*+/)|(?://.*)","");
       demo d=new demo();
       File folder=new File(dname);
       File[] listOfFiles=folder.listFiles();
       int i=0;
       for(File f : listOfFiles)
       {
           
           if(f.isFile())
           {
              String i1 = d.readFileInList(dname+'/'+f.getName()); 
              i1=i1.replaceAll("(?:/\\*(?:[^*]|(?:\\*+[^*/]))*\\*+/)|(?://.*)","");
              double percent=compareFiles(i1,s1);
               if(percent >  Double.parseDouble(ThreshouldLabel.getText()))
                {
              CompareTable.setValueAt("Submitted Code",i,0);
              CompareTable.setValueAt(f.getName(),i,1);
              CompareTable.setValueAt(percent,i,2);
              i++;
                }
           }
       }
       pdfToggleButton.disable();
   }
    private void CheckToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckToggleButtonActionPerformed
            String s2 = NameLabel.getText();
            String s1 = FileTextArea.getText();
            List<String> l=new ArrayList<String>();
            String[] temp1=s1.split("\n");
         if(s1.equals(""))
         {
             checkLabel.setText("Write c file.");
         }
         else
         {
             if(s2.equals(""))
             {
                 checkLabel.setText("choose file or dir.");
             }
             else
             {
                for(String s3: temp1)
                {   l.add(s3);
                    //System.out.println(s3);
                }
                if(CheckToggleButton.getText().equals("Check DIR"))
                {
                    try {
                        compareDirectoryAndFile(l,s2);
                    } catch (IOException ex) {
                        Logger.getLogger(MJAPP.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    MainPanel.removeAll();
                    MainPanel.repaint();
                    MainPanel.revalidate();

                    MainPanel.add(ResultDirCard);
                    MainPanel.repaint();
                    MainPanel.revalidate(); 
                }
                else
                {
                MainPanel.removeAll();
                MainPanel.repaint();
                MainPanel.revalidate();

                MainPanel.add(ResultCard);
                MainPanel.repaint();
                MainPanel.revalidate();     
                      //  System.out.println(temp1);
                FileReading f=new FileReading();
                try {
                    ans = f.checkF(l,s2);
                    ResultLabel.setText(String.format("%.2f",ans));
                    ResultProgressBar.setValue((int)ans);
                    if(ans >  Double.parseDouble(ThreshouldLabel.getText()))
                        ResultProgressBar.setForeground(Color.red);
                    else
                        ResultProgressBar.setForeground(Color.green);
                } catch (IOException ex) {
                    Logger.getLogger(MJAPP.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
            }
        }
    }//GEN-LAST:event_CheckToggleButtonActionPerformed

    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();

        MainPanel.add(HomeCard);
        MainPanel.repaint();
        MainPanel.revalidate();
    }//GEN-LAST:event_HomeButtonActionPerformed

    private void HomeButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButton1ActionPerformed
        MainPanel.removeAll();
        MainPanel.repaint();
        MainPanel.revalidate();

        MainPanel.add(HomeCard);
        MainPanel.repaint();
        MainPanel.revalidate();

    }//GEN-LAST:event_HomeButton1ActionPerformed

    private void pdfpathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfpathButtonActionPerformed
          
              JFileChooser chooser = new JFileChooser();
      chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
       chooser.showOpenDialog(null);
      File di = chooser.getSelectedFile();
      String filename = di.getAbsolutePath();
      pdfpathLabel.setText(filename);
           
    }//GEN-LAST:event_pdfpathButtonActionPerformed

    private void pdfToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfToggleButtonActionPerformed
          if(pdfpathLabel.getText().equals("") || pdfTextField.getText().equals(""))
          {
            jLabel3.setText("Please ! Enter the path");
          }
          else
          {
                jLabel3.setText(" ");
                String ss=pdfTextField.getText();
                String fname;
                fname = pdfpathLabel.getText()+"/"+ss;
                 pdfpathLabel.setText(fname);
                 pdfpathLabel.setText("");
                 pdfTextField.setText("");
                 toExcel(CompareTable,new File(fname+".xls"));
                 jLabel3.setText("Result Successfully Saved!!");
              
          }
    }//GEN-LAST:event_pdfToggleButtonActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MJAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MJAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MJAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MJAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MJAPP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BasePanel;
    private javax.swing.JMenuItem C;
    private javax.swing.JPanel CheckCard;
    private javax.swing.JLabel CheckLabel;
    public javax.swing.JToggleButton CheckToggleButton;
    public javax.swing.JLabel ComFileLabel;
    public javax.swing.JLabel ComFileLabel1;
    private javax.swing.JPanel CompareCard;
    private javax.swing.JLabel CompareLabel;
    private javax.swing.JTabbedPane CompareTabbedPane;
    public javax.swing.JTable CompareTable;
    private javax.swing.JLabel CsvFileLabel;
    private javax.swing.JButton DetectButton;
    private javax.swing.JButton DetectDirButton;
    private javax.swing.JButton DirectoryButton;
    private javax.swing.JButton DirectoryButton1;
    public javax.swing.JLabel DirectoryLabel;
    private javax.swing.JPanel DirectoryPanel;
    private javax.swing.JLabel ERRORLabel;
    private javax.swing.JLabel ErrorLabel;
    private javax.swing.JPanel FilePanel;
    private javax.swing.JTextArea FileTextArea;
    private javax.swing.JPanel HeadPanel;
    private javax.swing.JButton HomeButton;
    private javax.swing.JButton HomeButton1;
    private javax.swing.JPanel HomeCard;
    private javax.swing.JLabel HomeLabel;
    private javax.swing.JButton InputButton;
    private javax.swing.JButton InputButton1;
    public javax.swing.JLabel InputLabel;
    public javax.swing.JLabel InputLabel1;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JPopupMenu Option;
    private javax.swing.JPanel ResultCard;
    private javax.swing.JPanel ResultDirCard;
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JProgressBar ResultProgressBar;
    private javax.swing.JPanel SidePanel;
    private javax.swing.JPanel StatusPanel;
    private javax.swing.JLabel TITLELabel;
    public javax.swing.JLabel ThreshouldLabel;
    private javax.swing.JLabel checkLabel;
    private javax.swing.JButton filebutton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JSlider jSlider2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField pdfTextField;
    public javax.swing.JToggleButton pdfToggleButton;
    private javax.swing.JButton pdfpathButton;
    public javax.swing.JLabel pdfpathLabel;
    // End of variables declaration//GEN-END:variables
}
